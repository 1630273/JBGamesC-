<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnC.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAH
        owAAB6MBMC+yxQAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAFGSURBVFhHY/j/
        //+AYqyC9MRYBemJsQrSEzO0TTkp3Db9dFnbzLMz6IpBdgLtZmifcWYrEP8fILwV5IB/aIL0xP8Y4rL7
        /g8kZghNbPg/kHjUAQyZ5fP/DyQG5QJsqZNuePA4oHP2uf8L9jz6v2j/ExQ8fd0tsPzcHfcx5GZvvYdi
        GDkYJQSmr7/1f+amOyh4wtIrYLmpq29gyE1eeQ2ul1w8eKKga865/6tOvfrft+gS2Ndrzr4F+7Jj1tn/
        K0++AouB5NacffN/zrZ7/ztmnv2/+OBTDANJxSghALIAxgZZCHIUiN27EEl8yWWg+Hkwu2feBbg4GAMd
        1bXwIl7ciaaHqlHQAXTYxF0P8eI+YDpD1jPqgFEHUNUB4FwAzEn4cOd8zFwwsE0yIDGwjdIBb5Zj6yzQ
        E2MVpCfGKkhPjFWQfvg/AwCJQlDeWvlH8wAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="btnD.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAH
        owAAB6MBMC+yxQAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAHvSURBVFhHY/j/
        //+AYqyC9MRYBemJsQrSEzOYVe4RtqrcU2ZduW8GPTHITpDdDFaVe7cC8f8BwltBDviHJkhP/A/kAGwS
        ZGHHuv3/i+ZfIIhTp52G64E7oGv9jf8nbr1FwQeuvPrv0XQIrAld7vjNN/+j+k/ADQLh4K6j//8BU9bN
        l19x4qcffvy/8vgjXA/cASDDWlZfQ8E1yy7/t67a+9+37TCGXPOqq2Afw/SDMMgBP//8/a8z8QJOnLfl
        PtABn+B6qBoFFDlg0f4H/zeeegpmn7v3/v+zd9/+O9Tu/z91+53/ey+9BIsfvvb6/5tPP/+7NR78P23H
        HXDUwPSDMEUOcKo78N+5/gCY7d508L9362EwG+QI14aDYDbIYlB0gNj2QHGbqn1gNgwPiigAJcIzQAtw
        4TtvvtHOAU7AEKxbfoUgzp97Hq6Hqg4gB486YNQBcAeYle/6r1mwCQXrFW8Fy1lW7MGQ0yrcDDcExEaX
        B+kByYHMQJcD2QXTC3eAcemO/7JZq1Cwat56sJwF0DB0OYXsNXBDQGx0eZAekBzIDHQ5kF0wvYPHAaZl
        u8CKkbE2NJhBwYkup56/EW4IiI0uD4sCkBnociC7YHoHRSIc8CbZwDZKB7xZjtxJGAiMVZCeGKsgPTFW
        Qfrh/wwAQylvPsJy4a4AAAAASUVORK5CYII=
</value>
  </data>
  <data name="btnE.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAA
        9AAAAPQBFLZpEgAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAJ+SURBVFhH7ZXf
        S1NhGMd3U0Rd9Q+khYXNeSWBsy7MMSxRqjk7emHUzRQGEYE46yIMKpEwcVu5JSljvxhrrTb1sDnDptO5
        STQQuvFiEpvWom39AU/nXbwHznzHzhrneNPF5+Z7OO/3c573nPdIAOBQIYZiQgzFhBhWS83UZdWpKYWX
        D8QFqqVW36ar0bcBH4gL/CsyP6Vq9FG6euc1+qylE0pRN9shjECDn/LKfBSU47xbJbyA9J0a6l03WKQe
        tXgCqPyMuZ0tQZyeVoL0bbc4AuesXZxyTN1cx38BYQT2vlhO5OOOYW3w3qqoAqm473g+5hzKxxzfGeBh
        aDhasUBLM+UsxVVlPz14S5vEZCI2Vy7mcGLym459VIz5vG7KeMLPwb08Bi76yQHcS88AXTeEHsEFU+df
        AXnzTeBLJmJly6rlfWBMHIG95RlIzhsh6TdwSCxMCi+QjdogvfSawcyyE3gJIXoc2me6D28LHgd0hXLB
        BTLhOUgHzZAqYi34QniBX+tW2EV7z8EAO4tGuO+7K84EikmsmkBFa7jnAKmoFJUIZDdshS3IfOLiYc6I
        sgItF/ug7+kk3DG9AcX1QTbnK4DGX/zZYSboB+UFugZGYCi6UgBJ4JyvAHr6n2sWDlsfDdC7MFA4ihu8
        PV9rjYorCKKAUq1lBdAkcF7JFuQ27QcYDY0UBBp91Ab+n5R8B5AEmgTaDpzth62GXMweZApSxYUY9PTf
        6FfE8S8GxyNMuU72obe/rACJ1tbbx/CN2YTtZD5uv/Q75tQwxRPMX3Ea8WNldp751re5mLbTIbMeXK6j
        +H6MRC7v8fKlqUlzpHiBaiGGYkIMxYQYigdI/gDmrso9uxJmIQAAAABJRU5ErkJggg==
</value>
  </data>
</root>