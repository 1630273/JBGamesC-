<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABQAAAAUCAYAAACNiR0NAAAAIGNIUk0AAHolAACAgwAA+f8AAIDoAABS
        CAABFVgAADqXAAAXb9daH5AAAAAJcEhZcwAACxMAAAsTAQCanBgAAAD5SURBVDhPrZTbCoJAEEB76JP6
        g6CIXvokKaIb1ZtP6uJn5D31szZsRlyY1WGN1ofDtGfHAxY0a5pmUlhpAytt0A6O48yFEFvqTLiuu+g7
        7eB53gqmLKvqTj3HK4r2MCU8s6ReW0KyLDvBNEaTJDnAlHVdP/t32kFhisZxfMQ7LoYMhIKLpmnaxsA9
        lOvDSgWN/vJVIKykqBAyFkNYScnz/AwTgx/rYFEUV5gSopfu82iUlQgEbjDbGHGjUVa+y1LF8HW1u7Ho
        QHSLsvsxBveIKaodRBjuYBpjChX1fX9DvbaEfw5BEKypM4G7+Ax12sIUsNIGVv5PM/sCyyGv5CE4tLYA
        AAAASUVORK5CYII=
</value>
  </data>
  <metadata name="ErrorCampos.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="ErrorCampos.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABx2AAAcdgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAMAAAAEAAAAAgAA
        AAAAAAAAAAAAAAAAAAAAAAACAAAABAAAAAMAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAQAAAABAAAAAAAA
        AAAAAAAAAAAABQAAABAAAAAQAAAABQAAAAAAAAAAAAAAAAAAAAEAAAAEAAAAAQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAACAAAAAAAA
        AAUAAABCAAAAjgAAAMMAAADhAAAA7QAAAO0AAADhAAAAwwAAAI8AAABCAAAABQAAAAAAAAACAAAAAgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAAAAA
        AAQAAABjAAAA2QAAAP8AAAD+AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/gAAAP8AAADZAAAAYwAA
        AAQAAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAA
        AAAAAAAqAAAAywAAAP8AAAD+AAAA/QAAAPsAAAD8AAAA/QAAAP4AAAD+AAAA/QAAAPwAAAD7AAAA/QAA
        AP4AAAD/AAAAywAAACsAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAQAAAAAAAAATgAAAPUAAAD/AAAA+wAAAP0AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/QAAAPsAAAD/AAAA9QAAAE4AAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAADAAAAAAAAAE8AAAD+AAAA/gAAAPwAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAPwAAAD+AAAA/gAAAE8AAAAAAAAAAwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAgAAAAAAAAAuAAAA8wAAAP8AAAD9AAAA/wAAAP8AAAD+AAAA/AAAAP0AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD9AAAA/AAAAP4AAAD/AAAA/wAAAP0AAAD/AAAA8wAAAC4AAAAAAAAAAgAA
        AAAAAAAAAAAAAAAAAAEAAAAAAAAAAgAAAMYAAAD/AAAA/AAAAP8AAAD/AAAA/gAAAP0AAAD/AAAA/wAA
        AP0AAAD/AAAA/wAAAP8AAAD/AAAA/QAAAP8AAAD/AAAA/QAAAP4AAAD/AAAA/wAAAPwAAAD/AAAAxgAA
        AAIAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAAAAABmAAAA/wAAAPsAAAD/AAAA/wAAAP8AAAD/AAAA+AAA
        AMQAAADdAAAA/wAAAPwAAAD/AAAA/wAAAPwAAAD/AAAA3QAAAMQAAAD5AAAA/wAAAP8AAAD/AAAA/wAA
        APsAAAD/AAAAZgAAAAAAAAADAAAAAAAAAAEAAAAAAAAABAAAANMAAAD/AAAA/QAAAP8AAAD+AAAA/wAA
        AP8AAABMAAAAAAAAAAYAAAClAAAA/wAAAPoAAAD6AAAA/wAAAKQAAAAGAAAAAAAAAE0AAAD/AAAA/wAA
        AP4AAAD/AAAA/QAAAP8AAADTAAAABAAAAAAAAAABAAAAAwAAAAAAAABEAAAA/wAAAP0AAAD/AAAA/wAA
        APwAAAD/AAAAxgAAAAAAAAAEAAAAAQAAAAAAAACjAAAA/wAAAP8AAACjAAAAAAAAAAEAAAAEAAAAAAAA
        AMcAAAD/AAAA/AAAAP8AAAD/AAAA/QAAAP8AAABEAAAAAAAAAAMAAAAEAAAAAAAAAIwAAAD/AAAA+wAA
        AP8AAAD/AAAA/QAAAP8AAADeAAAACwAAAAAAAAAEAAAAAgAAAAAAAACtAAAArQAAAAAAAAACAAAABAAA
        AAAAAAAMAAAA3wAAAP8AAAD9AAAA/wAAAP8AAAD7AAAA/wAAAIwAAAAAAAAABAAAAAIAAAAAAAAAwQAA
        AP8AAAD8AAAA/wAAAP8AAAD/AAAA/QAAAP8AAACkAAAAAAAAAAIAAAACAAAAAAAAAAgAAAAIAAAAAAAA
        AAIAAAACAAAAAAAAAKUAAAD/AAAA/QAAAP8AAAD/AAAA/wAAAPwAAAD/AAAAwQAAAAAAAAACAAAAAAAA
        AAUAAADfAAAA/wAAAP0AAAD/AAAA/wAAAP8AAAD/AAAA/AAAAP8AAACjAAAAAAAAAAAAAAABAAAAAgAA
        AAIAAAABAAAAAAAAAAAAAACjAAAA/wAAAPwAAAD/AAAA/wAAAP8AAAD/AAAA/QAAAP8AAADfAAAABQAA
        AAAAAAAAAAAADwAAAOwAAAD/AAAA/gAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA+gAAAP8AAACtAAAAAAAA
        AAAAAAABAAAAAQAAAAAAAAAAAAAArQAAAP8AAAD6AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD+AAAA/wAA
        AOwAAAAPAAAAAAAAAAAAAAAPAAAA7QAAAP8AAAD+AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD6AAAA/wAA
        AK0AAAAAAAAAAAAAAAEAAAABAAAAAAAAAAAAAACsAAAA/wAAAPoAAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP4AAAD/AAAA7AAAAA8AAAAAAAAAAAAAAAUAAADfAAAA/wAAAP0AAAD/AAAA/wAAAP8AAAD/AAAA/AAA
        AP8AAACjAAAAAAAAAAAAAAABAAAAAgAAAAIAAAABAAAAAAAAAAAAAACjAAAA/wAAAPwAAAD/AAAA/wAA
        AP8AAAD/AAAA/QAAAP8AAADfAAAABQAAAAAAAAACAAAAAAAAAMEAAAD/AAAA/AAAAP8AAAD/AAAA/wAA
        AP0AAAD/AAAApAAAAAAAAAACAAAAAgAAAAAAAAAIAAAACAAAAAAAAAACAAAAAgAAAAAAAACkAAAA/wAA
        AP0AAAD/AAAA/wAAAP8AAAD8AAAA/wAAAMEAAAAAAAAAAgAAAAQAAAAAAAAAjQAAAP8AAAD7AAAA/wAA
        AP8AAAD9AAAA/wAAAN4AAAALAAAAAAAAAAQAAAACAAAAAAAAAK0AAACtAAAAAAAAAAIAAAAEAAAAAAAA
        AAsAAADeAAAA/wAAAP0AAAD/AAAA/wAAAPsAAAD/AAAAjQAAAAAAAAAEAAAAAwAAAAAAAABEAAAA/wAA
        AP0AAAD/AAAA/wAAAPwAAAD/AAAAxgAAAAAAAAAEAAAAAQAAAAAAAACjAAAA/wAAAP8AAACjAAAAAAAA
        AAEAAAAEAAAAAAAAAMYAAAD/AAAA/AAAAP8AAAD/AAAA/QAAAP8AAABFAAAAAAAAAAMAAAABAAAAAAAA
        AAQAAADTAAAA/wAAAP0AAAD/AAAA/gAAAP8AAAD/AAAATAAAAAAAAAAGAAAApQAAAP8AAAD6AAAA+gAA
        AP8AAAClAAAABgAAAAAAAABMAAAA/wAAAP8AAAD+AAAA/wAAAP0AAAD/AAAA0wAAAAQAAAAAAAAAAQAA
        AAAAAAADAAAAAAAAAGYAAAD/AAAA+wAAAP8AAAD/AAAA/wAAAP8AAAD4AAAAwwAAAN0AAAD/AAAA/AAA
        AP8AAAD/AAAA/AAAAP8AAADdAAAAwwAAAPgAAAD/AAAA/wAAAP8AAAD/AAAA+wAAAP8AAABmAAAAAAAA
        AAMAAAAAAAAAAAAAAAEAAAAAAAAAAgAAAMYAAAD/AAAA/AAAAP8AAAD/AAAA/gAAAP0AAAD/AAAA/wAA
        AP0AAAD/AAAA/wAAAP8AAAD/AAAA/QAAAP8AAAD/AAAA/QAAAP4AAAD/AAAA/wAAAPwAAAD/AAAAxgAA
        AAIAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAIAAAAAAAAALgAAAPMAAAD/AAAA/QAAAP8AAAD/AAAA/gAA
        APwAAAD9AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/QAAAPwAAAD+AAAA/wAAAP8AAAD9AAAA/wAA
        APMAAAAuAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAATwAAAP4AAAD+AAAA/AAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/AAA
        AP4AAAD+AAAATwAAAAAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAATgAA
        APUAAAD/AAAA+wAAAP0AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/QAA
        APsAAAD/AAAA9QAAAE4AAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAQAAAAAAAAAKwAAAMsAAAD/AAAA/gAAAP0AAAD7AAAA/AAAAP0AAAD+AAAA/gAAAP0AAAD8AAAA+wAA
        AP0AAAD+AAAA/wAAAMsAAAArAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAMAAAAAAAAABAAAAGMAAADZAAAA/wAAAP4AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD+AAAA/wAAANoAAABkAAAABAAAAAAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAACAAAAAAAAAAUAAABDAAAAjgAAAMQAAADhAAAA7QAA
        AO0AAADhAAAAxAAAAI8AAABDAAAABgAAAAAAAAACAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAEAAAAAQAAAAAAAAAAAAAAAAAA
        AAUAAAAQAAAAEAAAAAUAAAAAAAAAAAAAAAAAAAABAAAABAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAwAA
        AAQAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAEAAAAAwAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/0JC//0UKL/yQAJP5AAAJ8oAAFPUAAArqAAAFZAAAAkgAAAEIAAABEAQ
        CAJAJCQCQBJIAkAQCAKADDABgAZgAYAGYAGADDABQBAIAkASSAJAJCQCQBAIAiAAAAQgAAAEkAAACagA
        ABXUAAArygAAU+QAAKfyQAJP/RQov/9CQv8=
</value>
  </data>
</root>